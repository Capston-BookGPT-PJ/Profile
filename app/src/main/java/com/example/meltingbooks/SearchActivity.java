package com.example.meltingbooks;

import android.content.Intent;
import android.os.Build;
import android.os.Bundle;
import android.text.TextUtils;
import android.view.View;
import android.view.inputmethod.EditorInfo;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.Toast;

import androidx.annotation.Nullable;
import androidx.appcompat.app.AppCompatActivity;
import androidx.core.content.ContextCompat;
import androidx.recyclerview.widget.GridLayoutManager;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import java.util.ArrayList;
import java.util.List;

public class SearchActivity extends AppCompatActivity {

    private EditText searchInput;
    private ImageButton searchIcon;


    // ÌÉ≠ Í¥ÄÎ†® RecyclerView
    private RecyclerView bookRecyclerView;
    private RecyclerView searchReviewRecyclerView;
    private RecyclerView popularUsersRecyclerView;
    private RecyclerView popularGroupsRecyclerView;
    private RecyclerView searchHashtagRecyclerView;

    private String currentTab = "book"; // Í∏∞Î≥∏ ÌÉ≠

    // üîπ Ï±Ö Í¥ÄÎ†® Î≥ÄÏàò
    private SearchBookAdapter bookAdapter;
    private List<Book> fullBookList;
    private List<Book> filteredBookList;
    private View barBook;

    // Í∞êÏÉÅÎ¨∏ Í¥ÄÎ†® Î≥ÄÏàò
    private List<Review> fullReviewList;
    private List<Review> filteredReviewList;
    private SearchReviewAdapter reviewAdapter;
    private View barReview;

    // üîπ Í∑∏Î£π Í¥ÄÎ†® Î≥ÄÏàò
    private GroupCardItemAdapter groupAdapter;
    private List<GroupCardItem> fullGroupList;
    private List<GroupCardItem> filteredGroupList;
    private View barGroup;

    // üîπ ÏÇ¨Ïö©Ïûê Í¥ÄÎ†® Î≥ÄÏàò
    private BrowseUsersAdapter userAdapter;
    private List<User> fullUserList;
    private List<User> filteredUserList;
    private View barUser;

    //Ìï¥ÏãúÌÉúÍ∑∏ Í¥ÄÎ†® Î≥ÄÏàò
    private List<Hashtag> fullHashtagList;
    private List<Hashtag> filteredHashtagList;
    private SearchHashtagAdapter hashtagAdapter;
    private View barHashtag;

    @Override
    protected void onCreate(@Nullable Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_search);

        searchInput = findViewById(R.id.searchInput);
        searchIcon = findViewById(R.id.searchIcon);

        //Í≤ÄÏÉâ Ïπ¥ÌÖåÍ≥†Î¶¨ Î≤ÑÌäº ÌÅ¥Î¶≠ ÌÉ≠
        findViewById(R.id.btnBook).setOnClickListener(v -> {
            currentTab = "book";
            performSearch();
        });

        findViewById(R.id.btnReview).setOnClickListener(v -> {
            currentTab = "review";
            performSearch();
        });

        findViewById(R.id.btnUser).setOnClickListener(v -> {
            currentTab = "user";
            performSearch();
        });

        findViewById(R.id.btnGroup).setOnClickListener(v -> {
            currentTab = "group";
            performSearch();
        });

        findViewById(R.id.btnHashtag).setOnClickListener(v -> {
            currentTab = "hashtag";
            performSearch();
        });

        // RecyclerView Ï¥àÍ∏∞Ìôî
        bookRecyclerView = findViewById(R.id.bookRecyclerView);
        searchReviewRecyclerView = findViewById(R.id.searchReviewRecyclerView);
        popularUsersRecyclerView = findViewById(R.id.popularUsersRecyclerView);
        popularGroupsRecyclerView = findViewById(R.id.popularGroupsRecyclerView);
        searchHashtagRecyclerView = findViewById(R.id.searchHashtagRecyclerView);

        // Bar Ï¥àÍ∏∞Ìôî
        barBook = findViewById(R.id.barBook);
        barReview = findViewById(R.id.barReview);
        barUser = findViewById(R.id.barUser);
        barGroup = findViewById(R.id.barGroup);
        barHashtag = findViewById(R.id.barHashtag);


        // üîπ Ï±Ö RecyclerView ÏÑ∏ÌåÖ
        bookRecyclerView.setLayoutManager(new LinearLayoutManager(this));
        filteredBookList = new ArrayList<>();
        fullBookList = createDummyBooks(); // ÎçîÎØ∏ Ï±Ö Îç∞Ïù¥ÌÑ∞
        bookAdapter = new SearchBookAdapter(this, filteredBookList);
        bookRecyclerView.setAdapter(bookAdapter);

        // Ï¥àÍ∏∞ Î™©Î°ù Î≥¥Ïó¨Ï£ºÍ∏∞
        filteredBookList.addAll(fullBookList);
        bookAdapter.notifyDataSetChanged();

        // Í∞êÏÉÅÎ¨∏  RecyclerView ÏÑ∏ÌåÖ
        filteredReviewList = new ArrayList<>();
        fullReviewList = createDummyReviews();
        reviewAdapter = new SearchReviewAdapter(filteredReviewList);
        searchReviewRecyclerView.setLayoutManager(new LinearLayoutManager(this));
        searchReviewRecyclerView.setAdapter(reviewAdapter);
        filteredReviewList.addAll(fullReviewList);
        reviewAdapter.notifyDataSetChanged();

        // üîπ ÏÇ¨Ïö©Ïûê RecyclerView ÏÑ∏ÌåÖ
        popularUsersRecyclerView.setLayoutManager(new GridLayoutManager(this,2));
        filteredUserList = new ArrayList<>();
        fullUserList = createDummyUsers();
        userAdapter = new BrowseUsersAdapter(filteredUserList);
        popularUsersRecyclerView.setAdapter(userAdapter);
        filteredUserList.addAll(fullUserList);

        // üîπ Í∑∏Î£π RecyclerView ÏÑ∏ÌåÖ
        popularGroupsRecyclerView.setLayoutManager(new GridLayoutManager(this, 2));

        filteredGroupList = new ArrayList<>();
        fullGroupList = createDummyGroups(); // Í∑∏Î£π ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞ ÏÉùÏÑ±

        groupAdapter = new GroupCardItemAdapter(this, filteredGroupList, item -> {
            String imageUrl = item.getImageUrl();
            if (imageUrl == null || imageUrl.isEmpty()) {
                imageUrl = "";
            }

            GroupProfileItem profileItem = new GroupProfileItem(
                    item.getName(),
                    imageUrl,
                    item.getCategory(),
                    item.getIntroTitle(),
                    item.getIntroDetail()
            );

            Intent intent = new Intent(SearchActivity.this, GroupProfileActivity.class);
            intent.putExtra("groupProfile", profileItem);
            startActivity(intent);
        });

        popularGroupsRecyclerView.setAdapter(groupAdapter);


        // Ï¥àÍ∏∞ Í∑∏Î£π Î™©Î°ù Î≥¥Ïó¨Ï£ºÍ∏∞
        filteredGroupList.addAll(fullGroupList);
        groupAdapter.notifyDataSetChanged();

        // Ìï¥ÏãúÌÉúÍ∑∏ RecyclerView ÏÑ∏ÌåÖ
        searchHashtagRecyclerView.setLayoutManager(new LinearLayoutManager(this));
        filteredHashtagList = new ArrayList<>();
        fullHashtagList = createDummyHashtags(); // ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞ ÏÉùÏÑ±
        hashtagAdapter = new SearchHashtagAdapter(filteredHashtagList);
        searchHashtagRecyclerView.setAdapter(hashtagAdapter);
        filteredHashtagList.addAll(fullHashtagList);
        hashtagAdapter.notifyDataSetChanged();

        // Í≤ÄÏÉâ ÏïÑÏù¥ÏΩò ÌÅ¥Î¶≠ Ïãú Ïã§Ìñâ
        searchIcon.setOnClickListener(v -> performSearch());

        // ÌÇ§Î≥¥ÎìúÏóêÏÑú Í≤ÄÏÉâ Î≤ÑÌäº ÎàåÎ†ÄÏùÑ Îïå Ïã§Ìñâ
        searchInput.setOnEditorActionListener((v, actionId, event) -> {
            if(actionId == EditorInfo.IME_ACTION_SEARCH){
                performSearch();
                return true;
            }
            return false;
        });



        // ÏÉÅÌÉúÎ∞î ÏÉâÏÉÅ Ï°∞Ï†ï
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
            getWindow().setStatusBarColor(ContextCompat.getColor(this, R.color.white));
        }
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {
            View decor = getWindow().getDecorView();
            decor.setSystemUiVisibility(View.SYSTEM_UI_FLAG_LIGHT_STATUS_BAR);
        }
    }

    private void performSearch() {
        String query = searchInput.getText().toString().trim();




        switch (currentTab) {
            case "book":
                bookRecyclerView.setVisibility(View.VISIBLE);
                searchReviewRecyclerView.setVisibility(View.GONE);
                popularUsersRecyclerView.setVisibility(View.GONE);
                popularGroupsRecyclerView.setVisibility(View.GONE);
                searchHashtagRecyclerView.setVisibility(View.GONE);
                barBook.setVisibility(View.VISIBLE);
                barReview.setVisibility(View.GONE);
                barUser.setVisibility(View.GONE);
                barGroup.setVisibility(View.GONE);
                barHashtag.setVisibility(View.GONE);

                filteredBookList.clear();
                if (TextUtils.isEmpty(query)) {
                    filteredBookList.addAll(fullBookList);
                } else {
                    for (Book book : fullBookList) {
                        if (book.getTitle().toLowerCase().contains(query.toLowerCase())) {
                            filteredBookList.add(book);
                        }
                    }
                }

                if (filteredBookList.isEmpty()) {
                    Toast.makeText(this, "Í≤ÄÏÉâ Í≤∞Í≥ºÍ∞Ä ÏóÜÏäµÎãàÎã§.", Toast.LENGTH_SHORT).show();
                }
                bookAdapter.notifyDataSetChanged();
                break;


            case "review":
                bookRecyclerView.setVisibility(View.GONE);
                searchReviewRecyclerView.setVisibility(View.VISIBLE);
                popularUsersRecyclerView.setVisibility(View.GONE);
                popularGroupsRecyclerView.setVisibility(View.GONE);
                searchHashtagRecyclerView.setVisibility(View.GONE);
                barBook.setVisibility(View.GONE);
                barReview.setVisibility(View.VISIBLE);
                barUser.setVisibility(View.GONE);
                barGroup.setVisibility(View.GONE);
                barHashtag.setVisibility(View.GONE);

                filteredReviewList.clear();
                if (TextUtils.isEmpty(query)) {
                    filteredReviewList.addAll(fullReviewList);
                } else {
                    for (Review r : fullReviewList) {
                        if (r.getTitle().toLowerCase().contains(query.toLowerCase())) {
                            filteredReviewList.add(r);
                        }
                    }
                }

                if (filteredReviewList.isEmpty()) {
                    Toast.makeText(this, "Í≤ÄÏÉâ Í≤∞Í≥ºÍ∞Ä ÏóÜÏäµÎãàÎã§.", Toast.LENGTH_SHORT).show();
                }

                reviewAdapter.notifyDataSetChanged();
                break;


            case "user":
                bookRecyclerView.setVisibility(View.GONE);
                searchReviewRecyclerView.setVisibility(View.GONE);
                popularUsersRecyclerView.setVisibility(View.VISIBLE);
                popularGroupsRecyclerView.setVisibility(View.GONE);
                searchHashtagRecyclerView.setVisibility(View.GONE);
                barBook.setVisibility(View.GONE);
                barReview.setVisibility(View.GONE);
                barUser.setVisibility(View.VISIBLE);
                barGroup.setVisibility(View.GONE);
                barHashtag.setVisibility(View.GONE);

                // üîπ Ïú†Ï†Ä Í≤ÄÏÉâ ÌïÑÌÑ∞ÎßÅ
                filteredUserList.clear();
                if (TextUtils.isEmpty(query)) {
                    filteredUserList.addAll(fullUserList);
                } else {
                    for (User user : fullUserList) {
                        if (user.getName().toLowerCase().contains(query.toLowerCase())) {
                            filteredUserList.add(user);
                        }
                    }
                }
                if (filteredUserList.isEmpty()) {
                    Toast.makeText(this, "Í≤ÄÏÉâ Í≤∞Í≥ºÍ∞Ä ÏóÜÏäµÎãàÎã§.", Toast.LENGTH_SHORT).show();
                }
                userAdapter.notifyDataSetChanged();
                break;


            case "group":
                bookRecyclerView.setVisibility(View.GONE);
                searchReviewRecyclerView.setVisibility(View.GONE);
                popularUsersRecyclerView.setVisibility(View.GONE);
                popularGroupsRecyclerView.setVisibility(View.VISIBLE);
                searchHashtagRecyclerView.setVisibility(View.GONE);
                barBook.setVisibility(View.GONE);
                barReview.setVisibility(View.GONE);
                barUser.setVisibility(View.GONE);
                barGroup.setVisibility(View.VISIBLE);
                barHashtag.setVisibility(View.GONE);


                // üîπ Í∑∏Î£π Í≤ÄÏÉâ ÌïÑÌÑ∞ÎßÅ
                filteredGroupList.clear();
                if (TextUtils.isEmpty(query)) {
                    filteredGroupList.addAll(fullGroupList);
                } else {
                    for (GroupCardItem item : fullGroupList) {
                        if (item.getName().toLowerCase().contains(query.toLowerCase())) {
                            filteredGroupList.add(item);
                        }
                    }
                }

                if (filteredGroupList.isEmpty()) {
                    Toast.makeText(this, "Í≤ÄÏÉâ Í≤∞Í≥ºÍ∞Ä ÏóÜÏäµÎãàÎã§.", Toast.LENGTH_SHORT).show();
                }

                groupAdapter.notifyDataSetChanged();
                break;


            case "hashtag":
                bookRecyclerView.setVisibility(View.GONE);
                searchReviewRecyclerView.setVisibility(View.GONE);
                popularUsersRecyclerView.setVisibility(View.GONE);
                popularGroupsRecyclerView.setVisibility(View.GONE);
                searchHashtagRecyclerView.setVisibility(View.VISIBLE);
                barBook.setVisibility(View.GONE);
                barReview.setVisibility(View.GONE);
                barUser.setVisibility(View.GONE);
                barGroup.setVisibility(View.GONE);
                barHashtag.setVisibility(View.VISIBLE);

                filteredHashtagList.clear();
                if (TextUtils.isEmpty(query)) {
                    filteredHashtagList.addAll(fullHashtagList);
                } else {
                    for (Hashtag tag : fullHashtagList) {
                        if (tag.getTag().toLowerCase().contains(query.toLowerCase())) {
                            filteredHashtagList.add(tag);
                        }
                    }
                }

                if (filteredHashtagList.isEmpty()) {
                    Toast.makeText(this, "Í≤ÄÏÉâ Í≤∞Í≥ºÍ∞Ä ÏóÜÏäµÎãàÎã§.", Toast.LENGTH_SHORT).show();
                }

                hashtagAdapter.notifyDataSetChanged();
                break;
        }
    }

    // üîπ Ï±Ö Í≤ÄÏÉâÏö© ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞ ÏÉùÏÑ±
    private List<Book> createDummyBooks() {
        List<Book> list = new ArrayList<>();
        list.add(new Book("Îç∞ÎØ∏Ïïà", "https://example.com/demian.jpg", "Ìó§Î•¥Îßå Ìó§ÏÑ∏", "ÎØºÏùåÏÇ¨"));
        list.add(new Book("1984", "https://example.com/1984.jpg", "Ï°∞ÏßÄ Ïò§Ïõ∞", "Î¨∏ÌïôÎèôÎÑ§"));
        list.add(new Book("Ïñ¥Î¶∞ÏôïÏûê", "https://example.com/prince.jpg", "ÏÉùÌÖçÏ•êÌéòÎ¶¨", "Ïó¥Î¶∞Ï±ÖÎì§"));
        return list;
    }

    // Í∞êÏÉÅÎ¨∏ Í≤ÄÏÉâÏö© ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞ ÏÉùÏÑ±
    private List<Review> createDummyReviews() {
        List<Review> list = new ArrayList<>();
        list.add(new Review("Îç∞ÎØ∏Ïïà Í∞êÏÉÅÎ¨∏"));
        list.add(new Review("1984 Î¶¨Î∑∞"));
        list.add(new Review("Ïñ¥Î¶∞ÏôïÏûê ÎèÖÌõÑÍ∞ê"));
        list.add(new Review("ÏÜåÏÑ§ÏÇ¨Îûë ÌõÑÍ∏∞"));
        return list;
    }

    // üîπ Í∑∏Î£π ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞ ÏÉùÏÑ±
    private List<GroupCardItem> createDummyGroups() {
        List<GroupCardItem> list = new ArrayList<>();

        GroupCardItem item1 = new GroupCardItem("ÎèÖÏÑúÎ™®ÏûÑ1", "Ï±ÖÍ≥º Ïù¥ÏïºÍ∏∞ÌïòÎäî Î™®ÏûÑ", R.drawable.sample_profile2);
        item1.setCategory("Î¨∏Ìïô ÌÜ†Î°† Í∑∏Î£π");
        item1.setIntroTitle("Í∑∏Î£π ÏÜåÍ∞ú");
        item1.setIntroDetail("üìå Ïù¥ Í∑∏Î£πÏùÄ Îã§ÏñëÌïú Î¨∏Ìïô ÏûëÌíàÏùÑ Ìï®Íªò ÏùΩÍ≥† ÌÜ†Î°†ÌïòÎäî Î™®ÏûÑÏûÖÎãàÎã§.\nÎ™®Îëê ÌôòÏòÅÌï©ÎãàÎã§!");
        list.add(item1);

        GroupCardItem item2 = new GroupCardItem("ÏòÅÌôîÏ±ÖÎ™®ÏûÑ", "ÏòÅÌôîÏôÄ Ï±ÖÏùÑ Ìï®Íªò Ï¶êÍ≤®Ïöî", R.drawable.sample_profile2);
        item2.setCategory("Î¨∏Ìôî ÍµêÎ•ò Í∑∏Î£π");
        item2.setIntroTitle("Í∑∏Î£π ÏÜåÍ∞ú");
        item2.setIntroDetail("üé¨ ÏòÅÌôîÏôÄ Ï±ÖÏùÑ Ïó∞Í≤∞ÌïòÏó¨ ÍπäÏù¥ ÏûàÎäî ÎåÄÌôîÎ•º ÎÇòÎàÑÎäî Í∑∏Î£πÏûÖÎãàÎã§.");
        list.add(item2);

        GroupCardItem item3 = new GroupCardItem("ÏÜåÏÑ§ÏÇ¨Îûë", "ÏÜåÏÑ§ ÏùΩÍ∏∞ Ï¢ãÏïÑÌïòÎäî Î™®ÏûÑ", R.drawable.sample_profile2);
        item3.setCategory("ÏÜåÏÑ§ Ìå¨ÌÅ¥ÎüΩ");
        item3.setIntroTitle("Í∑∏Î£π ÏÜåÍ∞ú");
        item3.setIntroDetail("üìñ ÏÜåÏÑ§ÏùÑ ÏÇ¨ÎûëÌïòÎäî ÏÇ¨ÎûåÎì§Ïù¥ Î™®Ïó¨ Ïù¥ÏïºÍ∏∞Î•º ÎÇòÎàÑÎäî Î™®ÏûÑÏûÖÎãàÎã§.");
        list.add(item3);

        GroupCardItem item4 = new GroupCardItem("ÏãúÏßëÎ™®ÏûÑ", "ÏãúÎ•º Ìï®Íªò ÎÇòÎàÑÎäî Î™®ÏûÑ", R.drawable.sample_profile2);
        item4.setCategory("ÏãúÏôÄ Î¨∏Ìïô");
        item4.setIntroTitle("Í∑∏Î£π ÏÜåÍ∞ú");
        item4.setIntroDetail("üå∏ ÏãúÏßëÏùÑ ÏùΩÍ≥† Í∞êÏÉÅÏùÑ ÎÇòÎàÑÎäî Îî∞ÎúªÌïú Î™®ÏûÑÏûÖÎãàÎã§.");
        list.add(item4);

        return list;
    }


    // üîπ ÏÇ¨Ïö©Ïûê ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞
    private List<User> createDummyUsers() {
        List<User> list = new ArrayList<>();
        list.add(new User("Alice", "Ï±Ö ÎçïÌõÑÏûÖÎãàÎã§ üìö", R.drawable.sample_profile2));
        list.add(new User("Bob", "ÏòÅÌôîÏôÄ Ï±ÖÏùÑ Ï¢ãÏïÑÌï¥Ïöî üé¨", R.drawable.sample_profile2));
        list.add(new User("Charlie", "ÏÜåÏÑ§ÏùÑ ÏÇ¨ÎûëÌïòÎäî ÏÇ¨Îûå ‚ú®", R.drawable.sample_profile2));
        return list;
    }

    // Ìï¥ÏãúÌÉúÍ∑∏ ÎçîÎØ∏ Îç∞Ïù¥ÌÑ∞
    private List<Hashtag> createDummyHashtags() {
        List<Hashtag> list = new ArrayList<>();
        list.add(new Hashtag("#ÎèÖÏÑú"));
        list.add(new Hashtag("#ÏòÅÌôîÏ±Ö"));
        list.add(new Hashtag("#ÏÜåÏÑ§"));
        list.add(new Hashtag("#Í∞êÏÉÅÎ¨∏"));
        list.add(new Hashtag("#Ï∂îÏ≤úÎèÑÏÑú"));
        return list;
    }
}
